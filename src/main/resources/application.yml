spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_ENDPOINT}:${DB_PORT}/${DB_NAME}?serverTimezone=UTC&characterEncoding=UTF-8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      data: 0
  jpa:
    hibernate:
      ddl-auto: update
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 0B
      max-file-size: 100MB
      max-request-size: 100MB
  batch:
    jdbc:
      initialize-schema: always

jwt:
  secret: ${JWT_SECRET}

guest:
  uuid: ${GUEST_UUID}

cloud:
  aws:
    s3:
      bucketName: ${S3_BUCKETNAME}
    credentials:
      access-key: ${S3_ACCESSKEY}
      secret-key: ${S3_SECRETKEY}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
    cloudfront:
      dmain: ${CLOUDFRONT_DOMAIN}

springdoc:
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: alpha
    persist-authorization: true
  paths-to-match:
    - /api/**

provider:
  google:
    user_info_uri: https://www.googleapis.com/oauth2/v1/userinfo
    method: get
  naver:
    user_info_uri: https://openapi.naver.com/v1/nid/me
    method: get
  kakao:
    user_info_uri: https://kapi.kakao.com/v2/user/me
    method: get